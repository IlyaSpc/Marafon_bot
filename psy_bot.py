import logging
import sqlite3
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import CommandStart
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils import executor

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "7904391590:AAGeQ-Lcsp5GQEEZLq_4veqsSOITr7xiaE4"
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
def init_db():
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("""CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        username TEXT,
        first_name TEXT,
        last_name TEXT,
        marathon_day INTEGER DEFAULT 0,
        last_message_time TEXT,
        goal TEXT,
        payment_status TEXT DEFAULT 'pending'
    )""")
    conn.commit()
    conn.close()

init_db()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class MarathonStates(StatesGroup):
    DAY_0_GOAL = State()
    DAY_0_SMART = State()
    DAY_1_Q1 = State()
    DAY_1_Q2 = State()
    DAY_2_Q1 = State()
    DAY_2_Q2 = State()
    DAY_3_Q1 = State()
    DAY_3_Q2 = State()
    DAY_4_Q1 = State()
    DAY_5_Q1 = State()
    DAY_6_Q1 = State()
    DAY_7_Q1 = State()
    DAY_7_Q2 = State()
    DAY_8_Q1 = State()
    DAY_9_Q1 = State()
    DAY_10_Q1 = State()
    DAY_11_Q1 = State()
    DAY_12_Q1 = State()
    DAY_13_Q1 = State()
    DAY_14_Q1 = State()

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(CommandStart())
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username or ""
    first_name = message.from_user.first_name or ""
    last_name = message.from_user.last_name or ""

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("INSERT OR IGNORE INTO users (user_id, username, first_name, last_name, marathon_day) VALUES (?, ?, ?, ?, ?)",
              (user_id, username, first_name, last_name, 0))
    conn.commit()
    conn.close()

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∞—Ñ–æ–Ω '–ü—É—Ç—å –∫ —Ü–µ–ª–∏: 14 –¥–Ω–µ–π –∫ –º–µ—á—Ç–µ'!\n"
        "–¢–µ–±—è –∂–¥–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –≥–¥–µ —Ç—ã –æ–ø—Ä–µ–¥–µ–ª–∏—à—å —Å–≤–æ—é —Ü–µ–ª—å –∏ –Ω–∞—É—á–∏—à—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ –∫ –Ω–µ–π –¥–≤–∏–≥–∞—Ç—å—Å—è. üöÄ\n\n"
        "–ù–∞—á–Ω–µ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –ù–∞–ø–∏—à–∏, –∫–∞–∫—É—é —Ü–µ–ª—å —Ç—ã —Ö–æ—á–µ—à—å –¥–æ—Å—Ç–∏—á—å? (–ù–∞–ø—Ä–∏–º–µ—Ä: –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É, –≤—ã–π—Ç–∏ –Ω–∞ –Ω–æ–≤—ã–π –¥–æ—Ö–æ–¥, —Å–º–µ–Ω–∏—Ç—å —Ä–∞–±–æ—Ç—É)"
    )
    await message.answer(welcome_text)
    await MarathonStates.DAY_0_GOAL.set()

# –î–µ–Ω—å 0: –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ —Ü–µ–ª–∏
@dp.message_handler(state=MarathonStates.DAY_0_GOAL)
async def process_day_0_goal(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    goal = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–ª—å –≤ –±–∞–∑—É
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET goal = ? WHERE user_id = ?", (goal, user_id))
    conn.commit()
    conn.close()

    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º —Ç–≤–æ—é —Ü–µ–ª—å –ø–æ SMART:\n"
        "1Ô∏è‚É£ –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è: –ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ—Å—Ç–∏—á—å?\n"
        "2Ô∏è‚É£ –ò–∑–º–µ—Ä–∏–º–∞—è: –ö–∞–∫ —Ç—ã –ø–æ–π–º–µ—à—å, —á—Ç–æ –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–∏?\n"
        "3Ô∏è‚É£ –î–æ—Å—Ç–∏–∂–∏–º–∞—è: –†–µ–∞–ª—å–Ω–æ –ª–∏ —ç—Ç–æ –¥–ª—è —Ç–µ–±—è?\n"
        "4Ô∏è‚É£ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è: –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ä–µ—Å—É—Ä—Å—ã?\n"
        "5Ô∏è‚É£ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏: –ö–æ–≥–¥–∞ —Ç—ã —Ö–æ—á–µ—à—å —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å?\n\n"
        "–û—Ç–≤–µ—Ç—å –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å —Ü–µ–ª—å!"
    )
    await MarathonStates.DAY_0_SMART.set()

@dp.message_handler(state=MarathonStates.DAY_0_SMART)
async def process_day_0_smart(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç–≤–æ—è —Ü–µ–ª—å —Å—Ç–∞–ª–∞ —á–µ—Ç—á–µ. –ó–∞–≤—Ç—Ä–∞ –Ω–∞—á–Ω–µ–º –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ –Ω–µ–π!\n"
        "üí° –í–∞–∂–Ω–æ —á–µ—Ç–∫–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ—é —Ü–µ–ª—å. –ë–µ–∑ —ç—Ç–æ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥."
    )
    await state.finish()

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–Ω—å –≤ –±–∞–∑–µ
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 1 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 1: –û—Å–æ–∑–Ω–∞–Ω–∏–µ ‚Äî –∑–∞—á–µ–º –≤–∞–º —ç—Ç–∞ —Ü–µ–ª—å?
@dp.message_handler(lambda message: True, state=None)
async def day_1_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 1:
        await message.answer(
            "–î–µ–Ω—å 1: –û—Å–æ–∑–Ω–∞–Ω–∏–µ ‚Äî –∑–∞—á–µ–º –≤–∞–º —ç—Ç–∞ —Ü–µ–ª—å?\n\n"
            "‚ùì –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ '7 –ø–æ—á–µ–º—É?'\n"
            "1Ô∏è‚É£ –ù–∞–ø–∏—à–∏, –ø–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å –¥–æ—Å—Ç–∏—á—å —ç—Ç–æ–π —Ü–µ–ª–∏?\n"
            "2Ô∏è‚É£ –ê —Ç–µ–ø–µ—Ä—å —Å–ø—Ä–æ—Å–∏ —Å–µ–±—è: –ø–æ—á–µ–º—É —ç—Ç–æ—Ç –æ—Ç–≤–µ—Ç –≤–∞–∂–µ–Ω?\n"
            "3Ô∏è‚É£ –ü–æ–≤—Ç–æ—Ä–∏ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å 7 —Ä–∞–∑ (–æ—Ç–≤–µ—á–∞—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ –Ω–∞ —Å–≤–æ–π –∂–µ –æ—Ç–≤–µ—Ç).\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "* –Ø —Ö–æ—á—É –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É.\n"
            "* –ü–æ—á–µ–º—É? ‚Üí –ü–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –¥–∞—Å—Ç –º–Ω–µ —Å–≤–æ–±–æ–¥—É.\n"
            "* –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ? ‚Üí –Ø —Å–º–æ–≥—É –±–æ–ª—å—à–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å...\n\n"
            "–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ 7 –æ—Ç–≤–µ—Ç–æ–≤ –≤ —á–∞—Ç!"
        )
        await MarathonStates.DAY_1_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_1_Q1)
async def process_day_1_q1(message: types.Message, state: FSMContext):
    await message.answer(
        "üî• –ö—Ä—É—Ç–æ! –¢–µ–ø–µ—Ä—å —Ç—ã —á–µ—Ç–∫–æ –ø–æ–Ω–∏–º–∞–µ—à—å, –∑–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–∞ —Ü–µ–ª—å.\n"
        "–ù–∞–ø–æ—Å–ª–µ–¥–æ–∫ –Ω–∞–ø–∏—à–∏ 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –æ—Ç–≤–µ—á–∞—è –Ω–∞ –≤–æ–ø—Ä–æ—Å: '–ó–∞—á–µ–º –º–Ω–µ —ç—Ç–æ?'\n\n"
        "(–ü—Ä–∏–º–µ—Ä: '–Ø —Ö–æ—á—É –º–∞—à–∏–Ω—É, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ —Å–≤–æ–±–æ–¥–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è. –Ø —Å–º–æ–≥—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, —Ä–∞–±–æ—Ç–∞—Ç—å –∏ –∂–∏—Ç—å —Ç–∞–º, –≥–¥–µ —Ö–æ—á—É. –≠—Ç–æ —Å–¥–µ–ª–∞–µ—Ç –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ.')"
    )
    await MarathonStates.DAY_1_Q2.set()

@dp.message_handler(state=MarathonStates.DAY_1_Q2)
async def process_day_1_q2(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –¢—ã –º–æ–ª–æ–¥–µ—Ü! –°–µ–≥–æ–¥–Ω—è —Ç—ã —Å–¥–µ–ª–∞–ª –ø–µ—Ä–≤—ã–π —à–∞–≥. –ó–∞–≤—Ç—Ä–∞ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —ç—Ç–∞ —Ü–µ–ª—å —Ç–≤–æ—è! üéØ\n\n"
        "üí° –°–æ–≤–µ—Ç: –ø–æ–¥—É–º–∞–π —Å–µ–≥–æ–¥–Ω—è, —á—Ç–æ –º–µ—à–∞–ª–æ —Ç–µ–±–µ —Ä–∞–Ω—å—à–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —ç—Ç–æ–π —Ü–µ–ª–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –∑–∞–≤—Ç—Ä–∞!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 2 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç–≤–æ—è –ª–∏ —ç—Ç–æ —Ü–µ–ª—å?
@dp.message_handler(lambda message: True, state=None)
async def day_2_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 2:
        await message.answer(
            "–î–µ–Ω—å 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç–≤–æ—è –ª–∏ —ç—Ç–æ —Ü–µ–ª—å?\n\n"
            "‚ùì –û—Ç–≤–µ—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞:\n"
            "1Ô∏è‚É£ –û—Ç–∫—É–¥–∞ —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª–æ—Å—å —ç—Ç–æ –∂–µ–ª–∞–Ω–∏–µ? –ö—Ç–æ —Ç–µ–±—è –≤–¥–æ—Ö–Ω–æ–≤–∏–ª –Ω–∞ —ç—Ç—É —Ü–µ–ª—å?\n"
            "2Ô∏è‚É£ –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —É–∂–µ –¥–æ—Å—Ç–∏–≥(–ª–∞) —ç—Ç–æ–π —Ü–µ–ª–∏. –ß—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å?\n"
            "3Ô∏è‚É£ –ï—Å–ª–∏ –±—ã –Ω–∏–∫—Ç–æ –æ–± —ç—Ç–æ–º –Ω–µ –∑–Ω–∞–ª, —Ç—ã –±—ã –≤—Å–µ —Ä–∞–≤–Ω–æ —Å—Ç—Ä–µ–º–∏–ª—Å—è(–∞—Å—å) –∫ —ç—Ç–æ–º—É?\n\n"
            "–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç!"
        )
        await MarathonStates.DAY_2_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_2_Q1)
async def process_day_2_q1(message: types.Message, state: FSMContext):
    await message.answer(
        "üîç –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≥–ª—É–±–∂–µ —Ä–∞–∑–±–µ—Ä–µ–º —Ç–≤–æ–∏ –∏—Å—Ç–∏–Ω–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è.\n"
        "–ï—Å–ª–∏ –≤–¥—Ä—É–≥ —Ç—ã –ø–æ–Ω—è–ª(–∞), —á—Ç–æ —Ü–µ–ª—å –Ω–µ —Å–æ–≤—Å–µ–º —Ç–≤–æ—è, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–µ.\n\n"
        "‚ú® –ó–∞–¥–∞–Ω–∏–µ: –ü–æ–¥—É–º–∞–π, –∫–∞–∫ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É —Ü–µ–ª–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ 100% —Ç–≤–æ–µ–π.\n"
        "–ó–∞–ø–∏—à–∏ –µ–µ –≤ –Ω–æ–≤–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ!\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "‚ùå '–•–æ—á—É –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å 500 000 –≤ –º–µ—Å—è—Ü, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –∫—Ä—É—Ç–æ.'\n"
        "‚úÖ '–•–æ—á—É –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å 500 000 –≤ –º–µ—Å—è—Ü, —á—Ç–æ–±—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å, —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–≤–æ–±–æ–¥—É –∏ –≤—ã–±–∏—Ä–∞—Ç—å, –≥–¥–µ –∂–∏—Ç—å.'\n\n"
        "–ù–∞–ø–∏—à–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å–≤–æ–µ–π —Ü–µ–ª–∏!"
    )
    await MarathonStates.DAY_2_Q2.set()

@dp.message_handler(state=MarathonStates.DAY_2_Q2)
async def process_day_2_q2(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –°—É–ø–µ—Ä! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –Ω–∞—Å—Ç–æ—è—â–∞—è, —Ç–≤–æ—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ü–µ–ª—å! –¢—ã —Å—Ç–∞–ª(–∞) –Ω–∞ —à–∞–≥ –±–ª–∏–∂–µ –∫ –µ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é. üí™\n\n"
        "–ó–∞–≤—Ç—Ä–∞ –º—ã —Ä–∞–∑–±–µ—Ä–µ–º —á—Ç–æ –º–µ—à–∞–µ—Ç —Ç–µ–±–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä–µ–¥ –∏ –∫–∞–∫ —É–±—Ä–∞—Ç—å –ø—Ä–µ–≥—Ä–∞–¥—ã! üöÄ"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 3 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 3: –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–∞—Ö–∏ –∏ –±–∞—Ä—å–µ—Ä—ã
@dp.message_handler(lambda message: True, state=None)
async def day_3_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 3:
        await message.answer(
            "–î–µ–Ω—å 3: –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–∞—Ö–∏ –∏ –±–∞—Ä—å–µ—Ä—ã\n\n"
            "‚ùì –û—Ç–≤–µ—Ç—å –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞:\n"
            "1Ô∏è‚É£ –ö–∞–∫–∏–µ 3 –ø—Ä–∏—á–∏–Ω—ã –º–µ—à–∞—é—Ç —Ç–µ–±–µ –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ —Ç–≤–æ–µ–π —Ü–µ–ª–∏?\n"
            "2Ô∏è‚É£ –ö–∞–∫–æ–π —Ç–≤–æ–π –≥–ª–∞–≤–Ω—ã–π —Å—Ç—Ä–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç—Ç–æ–π —Ü–µ–ª—å—é?\n"
            "3Ô∏è‚É£ –ß—Ç–æ —Å–∞–º–æ–µ —Å—Ç—Ä–∞—à–Ω–æ–µ –º–æ–∂–µ—Ç —Å–ª—É—á–∏—Ç—å—Å—è, –µ—Å–ª–∏ —Ç—ã –ø–æ–ø—Ä–æ–±—É–µ—à—å?\n\n"
            "–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –≤ —á–∞—Ç!"
        )
        await MarathonStates.DAY_3_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_3_Q1)
async def process_day_3_q1(message: types.Message, state: FSMContext):
    await message.answer(
        "üîç –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≥–ª—É–±–∂–µ —Ä–∞–∑–±–µ—Ä–µ–º —Ç–≤–æ–∏ —Å—Ç—Ä–∞—Ö–∏.\n"
        "–ß–∞—â–µ –≤—Å–µ–≥–æ –æ–Ω–∏ –∫–∞–∂—É—Ç—Å—è –Ω–∞–º –±–æ–ª—å—à–µ, —á–µ–º –µ—Å—Ç—å –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ.\n\n"
        "‚ú® –ó–∞–¥–∞–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ '–ê —á—Ç–æ, –µ—Å–ª–∏?':\n"
        "1Ô∏è‚É£ –ó–∞–ø–∏—à–∏ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö.\n"
        "2Ô∏è‚É£ –û—Ç–≤–µ—Ç—å: –ß—Ç–æ —Å–∞–º–æ–µ —Å—Ç—Ä–∞—à–Ω–æ–µ —Å–ª—É—á–∏—Ç—Å—è, –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç?\n"
        "3Ô∏è‚É£ –¢–µ–ø–µ—Ä—å –æ—Ç–≤–µ—Ç—å: –ö–∞–∫ —è —Å–ø—Ä–∞–≤–ª—é—Å—å —Å —ç—Ç–∏–º, –µ—Å–ª–∏ —ç—Ç–æ —Å–ª—É—á–∏—Ç—Å—è?\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "* –°—Ç—Ä–∞—Ö: '–ë–æ—é—Å—å, —á—Ç–æ –º–µ–Ω—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç'.\n"
        "* –°–∞–º–æ–µ —Å—Ç—Ä–∞—à–Ω–æ–µ: '–Ø –æ—Å—Ç–∞–Ω—É—Å—å –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –º–Ω–µ –±—É–¥–µ—Ç —Å–ª–æ–∂–Ω–æ'.\n"
        "* –ö–∞–∫ —Å–ø—Ä–∞–≤–ª—é—Å—å: '–ù–∞–π–¥—É –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—è –ø–æ–¥–¥–µ—Ä–∂–∞—Ç, –∏–ª–∏ –¥–æ–∫–∞–∂—É —Å–µ–±–µ, —á—Ç–æ –º–æ–≥—É —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å–∞–º(–∞)'.\n\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –≤—ã–≤–æ–¥—ã –≤ —á–∞—Ç!"
    )
    await MarathonStates.DAY_3_Q2.set()

@dp.message_handler(state=MarathonStates.DAY_3_Q2)
async def process_day_3_q2(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –ú–æ–ª–æ–¥–µ—Ü! –¢–µ–ø–µ—Ä—å —Ç—ã –≤–∏–¥–∏—à—å, —á—Ç–æ –¥–∞–∂–µ –µ—Å–ª–∏ —Å—Ç—Ä–∞—Ö —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è, —Ç—ã —Å–º–æ–∂–µ—à—å —Å —ç—Ç–∏–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è! –≠—Ç–æ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ. üí™\n\n"
        "–ó–∞–≤—Ç—Ä–∞ –º—ã –ø–µ—Ä–µ–≤–µ–¥–µ–º —Ç–≤–æ—é —Ü–µ–ª—å –≤ —á–µ—Ç–∫–∏–π, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω, —á—Ç–æ–±—ã –¥–≤–∏–≥–∞—Ç—å—Å—è —É–≤–µ—Ä–µ–Ω–Ω–æ! üöÄ"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 4 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 4: –ì–¥–µ –≤–∑—è—Ç—å —Ä–µ—Å—É—Ä—Å?
@dp.message_handler(lambda message: True, state=None)
async def day_4_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 4:
        await message.answer(
            "–î–µ–Ω—å 4: –ì–¥–µ –≤–∑—è—Ç—å —Ä–µ—Å—É—Ä—Å?\n\n"
            "‚ùì –ê–Ω–∞–ª–∏–∑ —ç–Ω–µ—Ä–≥–æ–∑–∞—Ç—Ä–∞—Ç: –ß—Ç–æ —Å–µ–π—á–∞—Å –∑–∞–±–∏—Ä–∞–µ—Ç —Ç–≤–æ—é —ç–Ω–µ—Ä–≥–∏—é?\n"
            "–ù–∞–ø–∏—à–∏, —á—Ç–æ –æ—Ç–Ω–∏–º–∞–µ—Ç —É —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ —Å–∏–ª (—Ä–∞–±–æ—Ç–∞, –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –ø—Ä–∏–≤—ã—á–∫–∏ –∏ —Ç.–¥.)?"
        )
        await MarathonStates.DAY_4_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_4_Q1)
async def process_day_4_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –î–∞–≤–∞–π –≤—ã—Å–≤–æ–±–æ–¥–∏–º —ç–Ω–µ—Ä–≥–∏—é –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–∏! –ü–æ–¥—É–º–∞–π, –∫–∞–∫ –º–æ–∂–Ω–æ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —ç–Ω–µ—Ä–≥–æ–∑–∞—Ç—Ä–∞—Ç—á–∏–∫.\n"
        "–ó–∞–≤—Ç—Ä–∞ —Ä–∞–∑–±–µ—Ä–µ–º, –∫–∞–∫ –±–æ—Ä–æ—Ç—å—Å—è —Å–æ —Å—Ç—Ä–∞—Ö–∞–º–∏ –∏ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–µ–π!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 5 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 5: –ë–æ—Ä—å–±–∞ —Å–æ —Å—Ç—Ä–∞—Ö–æ–º –∏ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–µ–π
@dp.message_handler(lambda message: True, state=None)
async def day_5_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 5:
        await message.answer(
            "–î–µ–Ω—å 5: –ë–æ—Ä—å–±–∞ —Å–æ —Å—Ç—Ä–∞—Ö–æ–º –∏ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏–µ–π\n\n"
            "‚ùì –£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ: –ß–µ–≥–æ —Ç—ã –±–æ–∏—à—å—Å—è, –∫–æ–≥–¥–∞ –¥—É–º–∞–µ—à—å –æ —Å–≤–æ–µ–π —Ü–µ–ª–∏?\n"
            "–ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ —Å—Ç—Ä–∞—Ö–∏, –∞ –ø–æ—Ç–æ–º –ø–æ–ø—Ä–æ–±—É–π –æ—Ç–≤–µ—Ç–∏—Ç—å: –∫–∞–∫ —Ç—ã –º–æ–∂–µ—à—å —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è?"
        )
        await MarathonStates.DAY_5_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_5_Q1)
async def process_day_5_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –°—Ç—Ä–∞—Ö ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ì–ª–∞–≤–Ω–æ–µ, –∫–∞–∫ —Ç—ã —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞–µ—à—å!\n"
        "–ó–∞–≤—Ç—Ä–∞ —Ä–∞–∑–±–µ—Ä–µ–º, –∫–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 6 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 6: –ö–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏
@dp.message_handler(lambda message: True, state=None)
async def day_6_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 6:
        await message.answer(
            "–î–µ–Ω—å 6: –ö–∞–∫ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏–∏\n\n"
            "‚ùì –ú–µ—Ç–æ–¥–∏–∫–∞ '2 –º–∏–Ω—É—Ç—ã': –í—ã–±–µ—Ä–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à–∞–≥ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–π–º–µ—Ç –Ω–µ –±–æ–ª—å—à–µ 2 –º–∏–Ω—É—Ç.\n"
            "–ù–∞–ø–∏—à–∏, —á—Ç–æ —ç—Ç–æ –∑–∞ —à–∞–≥, –∏ —Å–¥–µ–ª–∞–π –µ–≥–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"
        )
        await MarathonStates.DAY_6_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_6_Q1)
async def process_day_6_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –ù–µ –∂–¥–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏, —Å–æ–∑–¥–∞–≤–∞–π –µ—ë –¥–µ–π—Å—Ç–≤–∏—è–º–∏!\n"
        "–ó–∞–≤—Ç—Ä–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –¥–∞–¥–∏–º –ø–æ–¥–¥–µ—Ä–∂–∫—É!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 7 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ + –ø–æ–¥–¥–µ—Ä–∂–∫–∞
@dp.message_handler(lambda message: True, state=None)
async def day_7_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 7:
        await message.answer(
            "–î–µ–Ω—å 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ + –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
            "‚ùì –ß—Ç–æ —É–∂–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞ –ø—É—Ç–∏ –∫ —Ç–≤–æ–µ–π —Ü–µ–ª–∏? –ù–∞–ø–∏—à–∏ 3 –≤–µ—â–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Å–¥–µ–ª–∞–ª(–∞) –∑–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é."
        )
        await MarathonStates.DAY_7_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_7_Q1)
async def process_day_7_q1(message: types.Message, state: FSMContext):
    await message.answer(
        "üî• –ö–ª–∞—Å—Å! –í–∏–¥–∏—à—å, —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —É—Å–ø–µ—Ö–∏! –¢–µ–ø–µ—Ä—å —Å–¥–µ–ª–∞–µ–º –µ—â–µ –æ–¥–Ω–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ.\n"
        "‚ú® –ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø–∏—à–µ—à—å –ø–∏—Å—å–º–æ —Å–∞–º–æ–º—É —Å–µ–±–µ —á–µ—Ä–µ–∑ –≥–æ–¥. –û–ø–∏—à–∏, –∫–∞–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤ —Ç—ã —É–∂–µ –¥–æ–±–∏–ª—Å—è(–∞—Å—å) –∏ —á—Ç–æ —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å.\n"
        "–ü—Ä–∏–º–µ—Ä: '–ü—Ä–∏–≤–µ—Ç! –°–µ–π—á–∞—Å —è —Å–º–æ—Ç—Ä—é –Ω–∞ —Å–µ–±—è –∏ —Ä–∞–¥—É—é—Å—å —Ç–æ–º—É, —á—Ç–æ —è –¥–æ—Å—Ç–∏–≥ —Å–≤–æ–µ–π —Ü–µ–ª–∏. –Ø —Å–º–æ–≥(–ª–∞) —Å–¥–µ–ª–∞—Ç—å X, —É –º–µ–Ω—è –µ—Å—Ç—å Y, –∏ —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º(–æ–π)!'\n\n"
        "–ù–∞–ø–∏—à–∏ —Å–≤–æ–µ –ø–∏—Å—å–º–æ –≤ —á–∞—Ç!"
    )
    await MarathonStates.DAY_7_Q2.set()

@dp.message_handler(state=MarathonStates.DAY_7_Q2)
async def process_day_7_q2(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –≠—Ç–æ –ø–∏—Å—å–º–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∫—Ä–µ–ø–∏—Ç—å –≤–µ—Ä—É –≤ —Å–µ–±—è –∏ —Å–≤–æ—é —Ü–µ–ª—å.\n"
        "–ó–∞–≤—Ç—Ä–∞ –º—ã —Ä–∞–∑–±–µ—Ä–µ–º –∫–∞–∫ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –≤—ã—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 8 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 8: –†–∞–±–æ—Ç–∞ —Å —Å–æ–º–Ω–µ–Ω–∏—è–º–∏
@dp.message_handler(lambda message: True, state=None)
async def day_8_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 8:
        await message.answer(
            "–î–µ–Ω—å 8: –†–∞–±–æ—Ç–∞ —Å —Å–æ–º–Ω–µ–Ω–∏—è–º–∏\n\n"
            "‚ùì –ö–∞–∫ —Ç—ã –æ—Ç–≤–µ—á–∞–µ—à—å —Å–µ–±–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å '–ê –≤–¥—Ä—É–≥ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è?' –ù–∞–ø–∏—à–∏ —Å–≤–æ–∏ –º—ã—Å–ª–∏."
        )
        await MarathonStates.DAY_8_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_8_Q1)
async def process_day_8_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –ü—Ä–µ–æ–¥–æ–ª–µ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∫—Ä–∏—Ç–∏–∫–∞! –ó–∞–≤—Ç—Ä–∞ —Ä–∞–∑–±–µ—Ä–µ–º, –∫–∞–∫ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ–π —É—Å–ø–µ—Ö."
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 9 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 9: –û–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
@dp.message_handler(lambda message: True, state=None)
async def day_9_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 9:
        await message.answer(
            "–î–µ–Ω—å 9: –û–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n"
            "‚ùì –ö–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–∏–ª–∏ –µ—ë –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ) –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–µ–±—è? –ù–∞–ø–∏—à–∏ 3 —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç, –∏ 3, –∫—Ç–æ —Ç–æ—Ä–º–æ–∑–∏—Ç."
        )
        await MarathonStates.DAY_9_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_9_Q1)
async def process_day_9_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –¢—ã ‚Äî —ç—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ –ø—è—Ç–∏ –ª—é–¥–µ–π, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–±—â–∞–µ—à—å—Å—è. –ó–∞–≤—Ç—Ä–∞ –∑–∞–∫—Ä–µ–ø–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 10 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 10: –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
@dp.message_handler(lambda message: True, state=None)
async def day_10_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 10:
        await message.answer(
            "–î–µ–Ω—å 10: –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\n\n"
            "‚ùì –ù–∞–ø–∏—à–∏, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∑–∞ –º–∞—Ä–∞—Ñ–æ–Ω? –ö–∞–∫–∏–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã —Ç—ã –æ–¥–µ—Ä–∂–∞–ª(–∞)?"
        )
        await MarathonStates.DAY_10_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_10_Q1)
async def process_day_10_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –ú–∞–ª–µ–Ω—å–∫–∏–µ –ø–æ–±–µ–¥—ã —Å–æ–∑–¥–∞—é—Ç –±–æ–ª—å—à–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è! –ó–∞–≤—Ç—Ä–∞ —Ä–∞–∑–±–µ—Ä–µ–º, –∫–∞–∫ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Å–ø–µ—Ö."
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 11 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 11: –ö–∞–∫ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Å–ø–µ—Ö
@dp.message_handler(lambda message: True, state=None)
async def day_11_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 11:
        await message.answer(
            "–î–µ–Ω—å 11: –ö–∞–∫ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Å–ø–µ—Ö\n\n"
            "‚ùì –ù–∞–ø–∏—à–∏ 3 —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±—è –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç, –∏ 3 —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—Ä–º–æ–∑—è—Ç —Ç–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ."
        )
        await MarathonStates.DAY_11_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_11_Q1)
async def process_day_11_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –û—Ç–ª–∏—á–Ω–æ! –ó–∞–≤—Ç—Ä–∞ –Ω–∞—á–Ω–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —à–∞–≥–∏ ‚Äî —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 12 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 12: –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥!
@dp.message_handler(lambda message: True, state=None)
async def day_12_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 12:
        await message.answer(
            "–î–µ–Ω—å 12: –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥!\n\n"
            "‚ùì –°–¥–µ–ª–∞–π —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –∫ —Ü–µ–ª–∏.\n"
            "–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç: '–Ø —Å–¥–µ–ª–∞–ª(–∞) —ç—Ç–æ!'"
        )
        await MarathonStates.DAY_12_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_12_Q1)
async def process_day_12_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä–µ–¥! –ó–∞–≤—Ç—Ä–∞ —Å–¥–µ–ª–∞–µ–º –µ—â–µ –æ–¥–∏–Ω —à–∞–≥."
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 13 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 13: –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥!
@dp.message_handler(lambda message: True, state=None)
async def day_13_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 13:
        await message.answer(
            "–î–µ–Ω—å 13: –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥!\n\n"
            "‚ùì –°–¥–µ–ª–∞–π –µ—â–µ –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –∫ —Ü–µ–ª–∏.\n"
            "–ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç: '–Ø —Å–¥–µ–ª–∞–ª(–∞) —ç—Ç–æ!'"
        )
        await MarathonStates.DAY_13_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_13_Q1)
async def process_day_13_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! –ó–∞–≤—Ç—Ä–∞ –ø–æ–¥–≤–µ–¥–µ–º –∏—Ç–æ–≥–∏ –º–∞—Ä–∞—Ñ–æ–Ω–∞!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 14 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –î–µ–Ω—å 14: –ò—Ç–æ–≥–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã
@dp.message_handler(lambda message: True, state=None)
async def day_14_start(message: types.Message):
    user_id = message.from_user.id
    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("SELECT marathon_day FROM users WHERE user_id = ?", (user_id,))
    day = c.fetchone()[0]
    conn.close()

    if day == 14:
        await message.answer(
            "–î–µ–Ω—å 14: –ò—Ç–æ–≥–∏ –∏ –Ω–∞–≥—Ä–∞–¥—ã\n\n"
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –ø—Ä–æ—à–µ–ª(–∞) –º–∞—Ä–∞—Ñ–æ–Ω –∏ —Ç–µ–ø–µ—Ä—å –Ω–∞ –ø—É—Ç–∏ –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ! üöÄ\n"
            "üîπ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ:\n"
            "–ù–∞–ø–∏—à–∏, —á–µ–º—É —Ç—ã –Ω–∞—É—á–∏–ª—Å—è(–∞—Å—å) –∑–∞ 14 –¥–Ω–µ–π.\n"
            "–ö–∞–∫ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Ç–≤–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Ü–µ–ª–∏?\n\n"
            "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –∏—Ç–æ–≥!"
        )
        await MarathonStates.DAY_14_Q1.set()

@dp.message_handler(state=MarathonStates.DAY_14_Q1)
async def process_day_14_q1(message: types.Message, state: FSMContext):
    user_id = message.from_user.id

    await message.answer(
        "üî• –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è(–∞—Å—å)! –ì–ª–∞–≤–Ω–æ–µ ‚Äì –ø—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ –∫ —Ü–µ–ª–∏! üí™\n"
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—à–µ–ª(–∞) –º–∞—Ä–∞—Ñ–æ–Ω —Å–æ –º–Ω–æ–π!"
    )
    await state.finish()

    conn = sqlite3.connect("users.db")
    c = conn.cursor()
    c.execute("UPDATE users SET marathon_day = 15 WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)